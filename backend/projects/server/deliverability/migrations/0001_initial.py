# Generated by Django 3.2.16 on 2023-02-07 21:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Isp",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=45)),
                ("region", models.CharField(blank=True, max_length=45, null=True)),
                ("protocol", models.CharField(blank=True, max_length=4, null=True)),
                ("host", models.CharField(blank=True, max_length=31, null=True)),
                ("port", models.IntegerField(blank=True, null=True)),
                ("usessl", models.IntegerField(blank=True, db_column="useSSL", null=True)),
                (
                    "inboxfoldername",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb4_unicode_ci",
                        db_column="inboxFolderName",
                        max_length=12,
                        null=True,
                    ),
                ),
                (
                    "receivediplast",
                    models.IntegerField(blank=True, db_column="receivedIpLast", null=True),
                ),
                (
                    "receivedregex",
                    models.CharField(
                        blank=True, db_column="receivedRegex", max_length=255, null=True
                    ),
                ),
                (
                    "ipheader",
                    models.CharField(blank=True, db_column="ipHeader", max_length=45, null=True),
                ),
                (
                    "ipheaderregex",
                    models.CharField(
                        blank=True, db_column="ipHeaderRegex", max_length=255, null=True
                    ),
                ),
                (
                    "bulkfoldername",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb4_unicode_ci",
                        db_column="bulkFolderName",
                        max_length=45,
                        null=True,
                    ),
                ),
                (
                    "bulkheader",
                    models.CharField(blank=True, db_column="bulkHeader", max_length=45, null=True),
                ),
                (
                    "bulkheaderregex",
                    models.CharField(
                        blank=True, db_column="bulkHeaderRegex", max_length=45, null=True
                    ),
                ),
                (
                    "bulksubjectlineregex",
                    models.CharField(
                        blank=True, db_column="bulkSubjectLineRegex", max_length=45, null=True
                    ),
                ),
                (
                    "maxpullrate",
                    models.IntegerField(blank=True, db_column="maxPullRate", null=True),
                ),
                (
                    "spfheader",
                    models.CharField(blank=True, db_column="spfHeader", max_length=45, null=True),
                ),
                (
                    "spfpassregex",
                    models.CharField(
                        blank=True, db_column="spfPassRegex", max_length=45, null=True
                    ),
                ),
                (
                    "spfvalueregex",
                    models.CharField(
                        blank=True, db_column="spfValueRegex", max_length=45, null=True
                    ),
                ),
                (
                    "dkimheader",
                    models.CharField(blank=True, db_column="dkimHeader", max_length=45, null=True),
                ),
                (
                    "dkimpassregex",
                    models.CharField(
                        blank=True, db_column="dkimPassRegex", max_length=45, null=True
                    ),
                ),
                (
                    "dkimvalueregex",
                    models.CharField(
                        blank=True, db_column="dkimValueRegex", max_length=45, null=True
                    ),
                ),
                (
                    "domainkeysheader",
                    models.CharField(
                        blank=True, db_column="domainKeysHeader", max_length=45, null=True
                    ),
                ),
                (
                    "domainkeyspassregex",
                    models.CharField(
                        blank=True, db_column="domainKeysPassRegex", max_length=45, null=True
                    ),
                ),
                (
                    "domainkeysvalueregex",
                    models.CharField(
                        blank=True, db_column="domainKeysValueRegex", max_length=45, null=True
                    ),
                ),
                (
                    "senderidheader",
                    models.CharField(
                        blank=True, db_column="senderIDHeader", max_length=45, null=True
                    ),
                ),
                (
                    "senderidpassregex",
                    models.CharField(
                        blank=True, db_column="senderIDPassRegex", max_length=45, null=True
                    ),
                ),
                (
                    "senderidvalueregex",
                    models.CharField(
                        blank=True, db_column="senderIDValueRegex", max_length=45, null=True
                    ),
                ),
                ("enabled", models.IntegerField(blank=True, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "ibx_isps",
                "managed": False,
            },
        ),
    ]
